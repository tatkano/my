import networkx as nx

# Create an empty graph
G = nx.Graph()

# Add nodes
for i in range(1, 6): 
    G.add_node(i)
    i=i+1

# Add edges
G.add_edge(1, 2)
G.add_edge(2, 3)
G.add_edge(3, 4)
G.add_edge(4, 5)
G.add_edge(2, 5)
G.add_edge(4, 6)
G.add_edge(1, 5)

nx.draw_spring(G, with_labels = True)

# Perform depth-first search
dfs_tree = nx.dfs_tree(G, source=1)

# Print the nodes in the DFS tree
print("DFS tree nodes:", list(dfs_tree.nodes()))

# Find the shortest path using Dijkstra's algorithm
shortest_path = nx.shortest_path(G, source=1, target=5)

# Print the shortest path
print("Shortest path:", shortest_path)
